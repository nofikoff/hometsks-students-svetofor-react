{"version":3,"sources":["components/task2/Shar.js","components/task2/index.js","components/task3/Numbers.js","components/task3/index.js","components/task4/Svetofor.js","components/task4/index.js","components/task1/Blockqutes.js","components/task1/index.js","components/app/App.js","index.js"],"names":["sharik","text","color","Shar","useState","count","setCount","classes","makeStyles","textAlign","fontWeight","sharInner","width","height","borderRadius","display","alignItems","justifyContent","background","border","container","maxWidth","shar","flexDirection","justifyItems","useStyles","className","onClick","xx","a","Math","floor","random","length","getRandom","Typography","variant","Numbers","paper","min","setMin","max","setMax","setRandom","Paper","TextField","onChange","e","target","value","label","type","InputLabelProps","shrink","error","Button","ceil","Svetofor","red","yellow","green","colors","setColors","svetofor","padding","backgroundColor","useEffect","id","setInterval","console","log","Date","getSeconds","setTimeout","clearInterval","quotes","author","Blockquotes","visible","setVisible","element","margin","elementT","align","clickNext","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.398e0782.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Typography } from \"@material-ui/core\";\n\nimport \"./Shar.css\";\n\nconst sharik = [\n  { text: \"Ожидаю клик\", color: \"black\" },\n  { text: \"Бесспорно\", color: \"#0d47a1\" },\n  { text: \"Предрешено\", color: \"#0d47a1\" },\n  { text: \"Никаких сомнений\", color: \"#0d47a1\" },\n  { text: \"Определённо да\", color: \"#0d47a1\" },\n  { text: \"Можешь быть уверен в этом\", color: \"#0d47a1\" },\n  { text: \"Мне кажется - «да»\", color: \"#2e7d32\" },\n  { text: \"Вероятнее всего\", color: \"#2e7d32\" },\n  { text: \"Хорошие перспективы\", color: \"#2e7d32\" },\n  { text: \"Знаки говорят - «да»\", color: \"#2e7d32\" },\n  { text: \"Да\", color: \"#2e7d32\" },\n  { text: \"Пока не ясно, попробуй снова\", color: \"#ffd600\" },\n  { text: \"Спроси позже\", color: \"#ffd600\" },\n  { text: \"Лучше не рассказывать\", color: \"#ffd600\" },\n  { text: \"Сейчас нельзя предсказать\", color: \"#ffd600\" },\n  { text: \"Сконцентрируйся и спроси опять\", color: \"#ffd600\" },\n  { text: \"Даже не думай\", color: \"#c2185b\" },\n  { text: \"Мой ответ - «нет»\", color: \"#c2185b\" },\n  { text: \"По моим данным - «нет»\", color: \"#c2185b\" },\n  { text: \"Перспективы не очень хорошие\", color: \"#c2185b\" },\n  { text: \"Весьма сомнительно\", color: \"#c2185b\" },\n];\n\nfunction Shar() {\n  const [count, setCount] = useState(0);\n\n  const useStyles = makeStyles({\n    text: {\n      color: sharik[count].color === \"#ffd600\" ? \"black\" : \"white\",\n      textAlign: \"center\",\n      fontWeight: 600,\n    },\n    sharInner: {\n      width: \"40%\",\n      height: \"40%\",\n      borderRadius: \"50%\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      background: sharik[count].color,\n      border: \"1px solid white\",\n    },\n    container: {\n      width: \"100%\",\n      maxWidth: 500,\n      height: 500,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    shar: {\n      width: '70%',\n      height: '70%',\n      border: '1px solid white',\n      borderRadius: '50%',\n      background: 'linear-gradient(-45deg, #0d47a1 20%, #2e7d32 40%, #ffd600 70%, #c2185b 100%)',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      justifyContent: 'center',\n      justifyItems: 'center',\n    }\n  });\n  const classes = useStyles();\n\n  function getRandom(xx) {\n    let a = Math.floor(Math.random() * (xx.length - 1) + 1);\n    setCount(a);\n  }\n\n  return (\n    <div className={classes.container}>\n      <div\n        onClick={() => {\n          getRandom(sharik);\n        }}\n        className={classes.shar}\n      >\n        <div className={classes.sharInner}>\n          <Typography variant=\"body2\" className={classes.text}>\n            {sharik[count].text}\n          </Typography>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Shar;\n","import Shar from './Shar';\r\nexport default Shar;","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Button, TextField, Paper, Typography } from \"@material-ui/core\";\n\nimport \"./Numbers.css\";\n\nfunction Numbers() {\n  const useStyles = makeStyles({\n    container: {\n      width: \"100%\",\n      maxWidth: 500,\n      height: 500,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    paper: {\n      width: \"100%\",\n      maxWidth: 500,\n      height: 500,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"space-around\",\n    },\n  });\n  const classes = useStyles();\n\n  const [min, setMin] = useState(0);\n  const [max, setMax] = useState(0);\n  const [random, setRandom] = useState(0);\n  function getRandom(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    let random = Math.floor(Math.random() * (max - min + 1)) + min;\n    setRandom(random);\n  }\n\n  return (\n    <div className={classes.container}>\n      <Paper className={classes.paper}>\n        <Typography variant=\"h4\">{random}</Typography>\n        <div>\n          <TextField\n            onChange={(e) => setMin(e.target.value)}\n            label=\"Min number\"\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n              error: min > max,\n            }}\n            variant=\"outlined\"\n          />\n          <TextField\n            onChange={(e) => setMax(e.target.value)}\n            label=\"Max number\"\n            type=\"number\"\n            InputLabelProps={{\n              shrink: true,\n              error: max < min,\n            }}\n            variant=\"outlined\"\n          />\n        </div>\n        <Button\n          onClick={() => getRandom(min, max)}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          Click me\n        </Button>\n      </Paper>\n    </div>\n  );\n}\n\nexport default Numbers;\n","import Numbers from './Numbers';\r\nexport default Numbers;","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nfunction Svetofor() {\n  const [colors, setColors] = useState({\n    red: true,\n    yellow: false,\n    green: false,\n  });\n  const useStyles = makeStyles({\n    container: {\n      width: \"100%\",\n      maxWidth: 500,\n      height: 500,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    svetofor: {\n      width: \"30%\",\n      height: \"90%\",\n      border: \"2px solid grey\",\n      borderRadius: 3,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"space-around\",\n      padding: 20,\n    },\n    red: {\n      width: \"100%\",\n      height: \"30%\",\n      borderRadius: \"50%\",\n      backgroundColor: colors.red ? \"red\" : \"grey\",\n      border: \"2px solid grey\",\n    },\n    yellow: {\n      width: \"100%\",\n      height: \"30%\",\n      borderRadius: \"50%\",\n      backgroundColor: colors.yellow ? \"yellow\" : \"grey\",\n      border: \"2px solid grey\",\n    },\n    green: {\n      width: \"100%\",\n      height: \"30%\",\n      borderRadius: \"50%\",\n      backgroundColor: colors.green ? \"green\" : \"grey\",\n      border: \"2px solid grey\",\n    },\n  });\n\n  const classes = useStyles();\n  useEffect(() => {\n    let id = setInterval(() => {\n      console.log(new Date().getSeconds());\n      setTimeout(() => {\n        setColors({\n          red: true,\n          yellow: false,\n          green: false,\n        });\n        setTimeout(() => {\n          console.log(new Date().getSeconds());\n          setColors({\n            red: false,\n            yellow: true,\n            green: false,\n          });\n          setTimeout(() => {\n            console.log(new Date().getSeconds());\n            setColors({\n              red: false,\n              yellow: false,\n              green: true,\n            });\n          }, 2000);\n        }, 4000);\n      }, 0);\n    }, 10000);\n    return () => clearInterval(id);\n  }, []);\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.svetofor}>\n        <div className={classes.red}></div>\n        <div className={classes.yellow}></div>\n        <div className={classes.green}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default Svetofor;\n","import Svetofor from './Svetofor';\r\nexport default Svetofor;","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Button, Typography } from \"@material-ui/core\";\n\nconst quotes = [\n  {\n    text:\n      \"Что разум человека может постигнуть и во что он может поверить, того он способен достичь\",\n    author: \"Наполеон Хилл\",\n  },\n  {\n    text: \"Стремитесь не к успеху, а к ценностям, которые он дает\",\n    author: \"Альберт Эйнштейн\",\n  },\n  {\n    text:\n      \"Своим успехом я обязана тому, что никогда не оправдывалась и не принимала оправданий от других.\",\n    author: \"Флоренс Найтингейл\",\n  },\n  {\n    text:\n      \"За свою карьеру я пропустил более 9000 бросков, проиграл почти 300 игр. 26 раз мне доверяли сделать финальный победный бросок, и я промахивался. Я терпел поражения снова, и снова, и снова. И именно поэтому я добился успеха.\",\n    author: \"Майкл Джордан\",\n  },\n  {\n    text:\n      \"Сложнее всего начать действовать, все остальное зависит только от упорства.\",\n    author: \"Амелия Эрхарт\",\n  },\n  {\n    text: \"Надо любить жизнь больше, чем смысл жизни.\",\n    author: \"Федор Достоевский\",\n  },\n  {\n    text: \"Жизнь - это то, что с тобой происходит, пока ты строишь планы.\",\n    author: \"Джон Леннон\",\n  },\n];\n\nexport default function Blockquotes() {\n  const [count, setCount] = useState(0);\n  const [visible, setVisible] = useState(true);\n\n  const useStyles = makeStyles({\n    container: {\n      width: \"100%\",\n      maxWidth: 500,\n      height: 500,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n    element: {\n      margin: 10,\n    },\n    elementT: {\n      margin: 10,\n      color: \"white\",\n    },\n  });\n\n  const { text, author } = quotes[count];\n  const classes = useStyles();\n\n  function clickNext(xx) {\n    let min = Math.ceil(0);\n    let max = Math.floor(xx.length);\n    let random = Math.floor(Math.random() * (max - min + 0)) + min;\n    setCount(random);\n    setVisible(true);\n  }\n  function hideText() {\n    setVisible(false);\n  }\n\n  return (\n    <div className={classes.container}>\n      <div>\n        <Typography className={classes.elementT} align=\"center\" variant=\"body1\">\n          {visible ? text : \"\"}\n        </Typography>\n        <Typography className={classes.elementT} align=\"right\" variant=\"body2\">\n          {visible ? author : \"\"}\n        </Typography>\n      </div>\n      <div>\n        <Button\n          onClick={() => clickNext(quotes)}\n          className={classes.element}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          Следующая\n        </Button>\n        <Button\n          onClick={() => hideText()}\n          className={classes.element}\n          variant=\"contained\"\n          color=\"primary\"\n        >\n          Не нравится\n        </Button>\n      </div>\n    </div>\n  );\n}\n","import Blockquotes from \"./Blockqutes\";\r\nexport default Blockquotes;\r\n","import React from \"react\";\n\nimport \"./App.css\";\nimport Shar from \"../task2\";\nimport Numbers from \"../task3\";\nimport Svetofor from \"../task4\";\nimport Blockquotes from \"../task1\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Shar></Shar>\n      <Numbers></Numbers>\n      <Svetofor></Svetofor>\n      <Blockquotes></Blockquotes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}